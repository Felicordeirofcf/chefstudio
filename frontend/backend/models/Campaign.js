const mongoose = require("mongoose");

const campaignSchema = new mongoose.Schema({
  name: {
    type: String,
    // required: true, // Name might be auto-generated or optional initially
    default: function() {
      return `Campanha Inteligente - ${new Date().toLocaleDateString("pt-BR")}`;
    }
  },
  description: {
    type: String,
  },
  budget: {
    type: Number,
    required: true,
  },
  radius: {
    type: Number, // Assuming radius in km
    required: true,
  },
  // Location might be stored separately or on the User model
  // location: { type: Object }, // e.g., { lat: Number, lng: Number }
  status: {
    type: String,
    enum: ["active", "paused", "inactive", "draft", "completed", "error"],
    default: "draft",
  },
  // Reference to the menu item being advertised (optional, could be broader campaign)
  menuItem: {
    type: mongoose.Schema.Types.ObjectId,
    ref: "MenuItem",
  },
  generatedCaption: {
    type: String, // Caption generated by AI (simulated)
  },
  // Placeholder for actual Meta Campaign ID
  metaCampaignId: {
    type: String,
  },
  // Basic performance metrics (simulated)
  metrics: {
    impressions: { type: Number, default: 0 },
    clicks: { type: Number, default: 0 },
    spend: { type: Number, default: 0 },
    // Add more metrics as needed (conversions, revenue - harder to simulate)
    lastUpdated: { type: Date }
  },
  // Reference to the user who owns this campaign
  owner: {
    type: mongoose.Schema.Types.ObjectId,
    ref: "User",
    required: true,
  },
}, { timestamps: true });

module.exports = mongoose.model("Campaign", campaignSchema);

